@model QuizViewModel
@{
    ViewData["Title"] = "Edit Quiz";
}

<h2>Edit Quiz</h2>
<style>
    body {
        margin: 0;
        padding: 0;
        height: 100vh;
        display: flex;
        background: linear-gradient(120deg, rgba(255, 255, 255, 0.7) 70%, #dcdcdc 70%), url('/Photos/tło.jpg');
        background-repeat: no-repeat;
        background-size: cover;
    }

    .text-container {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        text-align: center;
        opacity: 0.9;
    }

    .text-content {
        color: #333;
        text-shadow: 2px 2px 5px white;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-buttons {
        display: flex;
        gap: 10px;
    }
</style>
@* 
<form asp-action="Edit">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <input type="hidden" id="kursId" name="kursId" value="@Model.KursId" />

    <div id="questionContainer">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <div class="form-group">
                <label>Question @(i + 1)</label>
                <input type="text" name="Questions[@i].Text" class="form-control" value="@Model.Questions[i].Text" />

                @for (int j = 0; j < Model.Questions[i].Answers.Count; j++)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Questions[@i].Answers[@j].IsCorrect" value="true" @(Model.Questions[i].Answers[j].IsCorrect ? "checked" : "") />
                        <label class="form-check-label">Is Correct Answer @(j + 1)</label>
                        <input type="text" name="Questions[@i].Answers[@j].Text" class="form-control" value="@Model.Questions[i].Answers[j].Text" />
                    </div>
                }
            </div>
            <hr />
        }
    </div>

    <div class="form-buttons">
        <button type="submit" class="btn btn-success">Save Changes</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>

</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
 *@

<h1>Edytuj Quiz: @Model.Title</h1>

<form asp-controller="Quiz" asp-action="EditQuiz" method="post">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="KursId" />

    <div class="form-group">
        <label>Tytuł quizu:</label>
        <input type="text" asp-for="Title" class="form-control" />
    </div>

    <h2>Pytania</h2>
    <div id="questions-container">
        @for (var i = 0; i < Model.Questions.Count; i++)
        {
            <div class="question-block">
                <input type="hidden" name="Questions[@i].Id" value="@Model.Questions[i].Id" />
                <label>Pytanie:</label>
                <input type="text" name="Questions[@i].Text" value="@Model.Questions[i].Text" class="form-control" />

                <h4>Odpowiedzi</h4>
                <div class="answers-container">
                    @for (var j = 0; j < Model.Questions[i].Answers.Count; j++)
                    {
                        <div class="answer-block">
                            <input type="hidden" name="Questions[@i].Answers[@j].Id" value="@Model.Questions[i].Answers[j].Id" />
                            <label>Odpowiedź:</label>
                            <input type="text" name="Questions[@i].Answers[@j].Text" value="@Model.Questions[i].Answers[j].Text" class="form-control" />
                            <label>Poprawna:</label>
                            <input type="checkbox" name="Questions[@i].Answers[@j].IsCorrect" value="true" @(Model.Questions[i].Answers[j].IsCorrect ? "checked" : "") />
                        </div>
                    }
                </div>
                <button type="button" class="btn btn-sm btn-success add-answer-btn" data-index="@i">Dodaj odpowiedź</button>
            </div>
        }
    </div>

    <button type="button" id="add-question-btn" class="btn btn-primary">Dodaj pytanie</button>
    <button type="submit" class="btn btn-success">Zapisz zmiany</button>
</form>

<script>
    document.getElementById("add-question-btn").addEventListener("click", function () {
        const container = document.getElementById("questions-container");
        const index = container.children.length;
        const questionHtml = `
            <div class="question-block">
                <label>Pytanie:</label>
                <input type="text" name="Questions[${index}].Text" class="form-control" />
                <h4>Odpowiedzi</h4>
                <div class="answers-container"></div>
                <button type="button" class="btn btn-sm btn-success add-answer-btn" data-index="${index}">Dodaj odpowiedź</button>
            </div>`;
        container.insertAdjacentHTML("beforeend", questionHtml);
    });

    document.addEventListener("click", function (event) {
        if (event.target.classList.contains("add-answer-btn")) {
            const index = event.target.getAttribute("data-index");
            const answersContainer = event.target.previousElementSibling;
            const answerIndex = answersContainer.children.length;
            const answerHtml = `
                <div class="answer-block">
                    <label>Odpowiedź:</label>
                    <input type="text" name="Questions[${index}].Answers[${answerIndex}].Text" class="form-control" />
                    <label>Poprawna:</label>
                    <input type="checkbox" name="Questions[${index}].Answers[${answerIndex}].IsCorrect" value="true" />
                </div>`;
            answersContainer.insertAdjacentHTML("beforeend", answerHtml);
        }
    });
</script>
